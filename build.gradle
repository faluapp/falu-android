// Top-level build file where you can add configuration options common to all sub-projects/modules.
buildscript {
    ext.kotlin_version = "1.8.22"

    repositories {
        google()
        mavenCentral()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:8.0.2'
        classpath 'io.github.gradle-nexus:publish-plugin:1.1.0'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"

        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

plugins {
    id "io.github.gradle-nexus.publish-plugin" version "1.3.0"
    id 'org.jetbrains.kotlin.android' version '1.8.22' apply false
}

allprojects {
    group = GROUP

    repositories {
        google()
        mavenCentral()
    }
}

ext.getPublishVersion = { -> return System.getenv("VERSION_NAME") ?: "1.0-SNAPSHOT" }
ext.getPublishVersionCode = { -> return 'git rev-list HEAD --count'.execute().text.trim() }
ext.getPublishUsername = { -> return System.getenv("PUBLISHING_USERNAME") ?: "" }
ext.getPublishPassword = { -> return System.getenv("PUBLISHING_PASSWORD") ?: "" }
ext.getPublishStagingProfileId = { -> return System.getenv("PUBLISHING_PROFILE_ID") ?: "" }
ext.getPublishUrl = { ->
    return System.getenv("PUBLISHING_URL") ?: "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/"
}

ext["signing.keyId"] = System.getenv("SIGNING_KEY_ID")
ext["signing.password"] = System.getenv("SIGNING_PASSWORD")

// If the key content is in an environmental var, write it to "tmp/key.gpg" and update
// ext['signing.secretKeyRingFile'] to point to it
def keyContent = System.getenv("SIGNING_KEY")
if (keyContent != null) {
    def tempDirectory = new File("$rootProject.rootDir/tmp")
    mkdir tempDirectory
    def keyFile = new File("$tempDirectory/key.gpg")
    keyFile.createNewFile()
    def os = keyFile.newDataOutputStream()
    os.write(keyContent.decodeBase64())
    os.close()
    keyContent = ''

    ext['signing.secretKeyRingFile'] = keyFile.absolutePath
}

ext {
    min_sdk_version = 21
    compile_sdk_version = 33
    target_sdk_version = 33

    group_id = GROUP

    camerax_version = '1.2.3'
    nav_version = "2.6.0"
    mockito_kotlin_version = "5.0.0"
    mockito_core_version = "5.2.0"
    robo_version = "4.10.3"
    mock_server_version = "4.11.0"
    expresso_version = "3.5.1"
    junit_ext_version = "1.1.5"
    junit_version = "4.13.2"
    coroutines_version = "1.7.1"
    constraint_layout_version = '2.1.4'
}

nexusPublishing {
    packageGroup = GROUP

    repositories {
        sonatype {
            stagingProfileId = getPublishStagingProfileId()
            username = getPublishUsername()
            password = getPublishPassword()
            nexusUrl.set(uri("https://s01.oss.sonatype.org/service/local/"))
            snapshotRepositoryUrl.set(uri("https://s01.oss.sonatype.org/content/repositories/snapshots/"))
        }
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}